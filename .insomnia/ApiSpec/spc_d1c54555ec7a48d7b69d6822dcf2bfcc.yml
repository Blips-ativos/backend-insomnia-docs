_id: spc_d1c54555ec7a48d7b69d6822dcf2bfcc
type: ApiSpec
parentId: wrk_ba989668d608432d9c4cf49213b1f6e3
modified: 1660598368058
created: 1650311385059
fileName: BLIPS DOCS
contents: >
  openapi: 3.0.0

  info:
    description: ""
    version: 2.0.0
    title: Blips Backend API
    termsOfService: http://swagger.io/terms/
    contact:
      email: jhonatan.costa@blips.com.br
    license:
      name: Apache 2.0
      url: http://www.apache.org/licenses/LICENSE-2.0.html

  tags:
    - name: Authentication
      description: Endpoints relacionados à autenticação
    - name: Questions
      description: Endpoints relacionados à perguntas de checklist
    - name: Negotiation
      description: Endpoints relacionados à negociações
    - name: Adm
      description: Endpoints relacionados à negociações
    - name: Segments
      description: Endpoints relacionados à segmentos
    - name: Integration
      description: Endpoints relacionados à integrações
    - name: Models
      description: Endpoints relacionados à modelos
    - name: Technician
      description: Endpoints relacionados à técnicos
    - name: Ticket
      description: Endpoints relacionados à chamados
    - name: Assets
      description: Endpoints relacionados aos ativos

    

  paths:
    /v2/user/login/{orgId}:
      post:
        tags:
          - Authentication
        summary: obter token
        description: "Autenticação de usuário"
        parameters:
          - name: orgId
            in: path
            description: ID da organização
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/Login"
        responses:
          "400":
            description: Invalid input
    /v2/user/register/{orgId}:
      post:
        security:
          - bearerAuth: []
        tags:
          - Authentication
        summary: registrar usuário
        description: "Registrar usuário"
        parameters:
          - name: orgId
            in: path
            description: ID da organização
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/Register"
        responses:
          "400":
            description: Invalid input
    /v2/user/refresh-token:
      post:
        security:
          - bearerAuth: []
        tags:
          - Authentication
        summary: refresh token
        description: "Fazer refresh de token"
        requestBody:
          $ref: "#/components/requestBodies/RefreshToken"
        responses:
          "400":
            description: Invalid input
    /v2/adm/questions:
      post:
        security:
          - bearerAuth: []
        tags:
          - Questions
        summary: criar pergunta de checklist
        description: "criar pergunta de checklist"
        requestBody:
          $ref: "#/components/requestBodies/Question"
        responses:
          "400":
            description: Invalid input
      get:
        security:
          - bearerAuth: []
        tags:
          - Questions
        summary: buscar perguntas de checklist
        description: "buscar perguntas de checklist"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Question"
             
          "400":
            description: Invalid input
    /v2/adm/questions/disabled:
      get:
        security:
          - bearerAuth: []
        tags:
          - Questions
        summary: buscar perguntas de checklist desabilitadas
        description: "buscar perguntas de checklist desabilitadas"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Question"
             
          "400":
            description: Invalid input
    /v2/adm/questions/{questionId}:
      get:
        security:
          - bearerAuth: []
        tags:
          - Questions
        summary: buscar pergunta de checklist
        description: "buscar pergunta de checklist"
        parameters:
          - name: questionId
            in: path
            description: ID da pergunta
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                 $ref: "#/components/schemas/Question"
             
          "400":
            description: Invalid input
      put:
        security:
          - bearerAuth: []
        tags:
          - Questions
        summary: Editar pergunta de checklist
        description: "Editar pergunta de checklist"
        parameters:
          - name: questionId
            in: path
            description: ID da pergunta
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/Question"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Question"
          "400":
            description: Invalid input
      delete:
        security:
          - bearerAuth: []
        tags:
          - Questions
        summary: Deletar pergunta de checklist
        description: "Deletar pergunta de checklist"
        parameters:
          - name: questionId
            in: path
            description: ID da pergunta
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Question"
          "400":
            description: Invalid input
    /v2/adm/questions/{questionId}/disabled:
      put:
        security:
          - bearerAuth: []
        tags:
          - Questions
        summary: desabilitar pergunta de checklist
        description: "desabilitar pergunta de checklist"
        parameters:
          - name: questionId
            in: path
            description: ID da pergunta
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    justification:
                      type: string
             
          "400":
            description: Invalid input
    /v2/adm/questions/{questionId}/enabled:
      put:
        security:
          - bearerAuth: []
        tags:
          - Questions
        summary: habilitar pergunta de checklist
        description: "habilitar pergunta de checklist"
        parameters:
          - name: questionId
            in: path
            description: ID da pergunta
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    justification:
                      type: string
             
          "400":
            description: Invalid input
    /v2/negotiation/{negotiationOrClientId}:
      get:
        security:
          - bearerAuth: []
        tags:
          - Negotiation
        summary: Negociação com id
        description: "Atualização de negociação"
        parameters:
          - name: negotiationOrClientId
            in: path
            description: ID da negociação
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Negotiation"
          "400":
            description: Invalid input
      patch:
        security:
          - bearerAuth: []
        tags:
          - Negotiation
        summary: Atualização de negociação
        description: "Atualização de negociação"
        parameters:
          - name: negotiationOrClientId
            in: path
            description: ID da negociação
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/NegotiationUpdateRB"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Negotiation"
             
          "400":
            description: Invalid input
      post:
        security:
          - bearerAuth: []
        tags:
          - Negotiation
        summary: Criação de negociação
        description: "Criação de negociação"
        parameters:
          - name: negotiationOrClientId
            in: path
            description: ID do clientee
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/NegotiationRB"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Negotiation"
             
          "400":
            description: Invalid input
    /v2/negotiation/by-organization?current=1&pageSize=10&sortBy=createdAt&sortDirection=DESC:
      get:
        security:
          - bearerAuth: []
        tags:
          - Negotiation
        summary: Negociações por organização
        description: "Negociações por organização"
        parameters:
          - name: current
            in: query
            description: página atual
            schema:
              type: integer
              default: 1
          - name: pageSize
            in: query
            description: tamanho da página
            schema:
              type: integer
              default: 10
          - name: sortBy
            in: query
            description: ordenar por
            schema:
              type: string
              default: createdAt
          - name: sortDirection
            in: query
            description: ordenação DESC / ASC
            schema:
              type: string
              default: DESC
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/Negotiation"
                    pagination:
                      type: object
                      properties:
                        current:
                          type: integer
                        maxPage:
                          type: integer
                        pageSize:
                          type: integer
                        total:
                          type: integer
          "400":
            description: Invalid input
    /v2/negotiation/by-client/{clientId}?current=1&pageSize=10&sortBy=createdAt&sortDirection=DESC:
      get:
        security:
          - bearerAuth: []
        tags:
          - Negotiation
        summary: Negociações por cliente
        description: "Negociações por cliente"
        parameters:
          - name: clientId
            in: path
            description: ID do cliente
            required: true
            schema:
              type: string
          - name: current
            in: query
            description: página atual
            schema:
              type: integer
              default: 1
          - name: pageSize
            in: query
            description: tamanho da página
            schema:
              type: integer
              default: 10
          - name: sortBy
            in: query
            description: ordenar por
            schema:
              type: string
              default: createdAt
          - name: sortDirection
            in: query
            description: ordenação DESC / ASC
            schema:
              type: string
              default: DESC
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/Negotiation"
                    pagination:
                      type: object
                      properties:
                        current:
                          type: integer
                        maxPage:
                          type: integer
                        pageSize:
                          type: integer
                        total:
                          type: integer
          "400":
            description: Invalid input
    /v2/negotiation/{negotiationId}/historical:
      patch:
        security:
          - bearerAuth: []
        tags:
          - Negotiation
        summary: Criação de item de histórico
        description: "Criação de item de histórico"
        parameters:
          - name: negotiationId
            in: path
            description: ID da negociação
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/HistoricalItemSlim"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Negotiation"
             
          "400":
            description: Invalid input
    /v2/negotiation/{negotiationId}/historical/{historicalId}:
      patch:
        security:
          - bearerAuth: []
        tags:
          - Negotiation
        summary: Atualização de item de histórico
        description: "Atualização de item de histórico"
        parameters:
          - name: negotiationId
            in: path
            description: ID da negociação
            required: true
            schema:
              type: string
          - name: historicalId
            in: path
            description: ID do item de histórico
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/HistoricalItemSlim"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Negotiation"
             
          "400":
            description: Invalid input
    /v2/negotiation/{negotiationId}/insert-company-user:
      patch:
        security:
          - bearerAuth: []
        tags:
          - Negotiation
        summary: Inserção de usuário em negociação
        description: "Inserção de usuário em negociação"
        parameters:
          - name: negotiationId
            in: path
            description: ID da negociação
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  document:
                    type: string
                  name:
                    type: string
                  linked_date:
                    type: string
                  linked_id_user:
                    type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Negotiation"
             
          "400":
            description: Invalid input
    /v2/negotiation/{negotiationId}/remove-company-user/{userId}:
      patch:
        security:
          - bearerAuth: []
        tags:
          - Negotiation
        summary: Remoção de usuário em negociação
        description: "Remoção de usuário em negociação"
        parameters:
          - name: negotiationId
            in: path
            description: ID da negociação
            required: true
            schema:
              type: string
          - name: userId
            in: path
            description: ID do usuário
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Negotiation"
             
          "400":
            description: Invalid input
    /v2/negotiation/{negotiationId}/document-analysis/{analysisId}:
      post:
        security:
          - bearerAuth: []
        tags:
          - Negotiation
        summary: aprovar/reprovar analise
        description: "aprovar/reprovar analise"
        parameters:
          - name: negotiationId
            in: path
            description: ID da negociação
            required: true
            schema:
              type: string
          - name: analysisId
            in: path
            description: ID da análise
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/AproveReproveAnalysis"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Negotiation"
             
          "400":
            description: Invalid input
    /v2/negotiation/{negotiationId}/guarantor:
      get:
        security:
          - bearerAuth: []
        tags:
          - Negotiation
        summary: Buscar fiador
        description: "Buscar fiador"
        parameters:
          - name: negotiationId
            in: path
            description: ID da negociação
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Guarantor"
             
          "400":
            description: Invalid input
      post:
        security:
          - bearerAuth: []
        tags:
          - Negotiation
        summary: Criar fiador
        description: "Criar fiador"
        parameters:
          - name: negotiationId
            in: path
            description: ID da negociação
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/Guarantor"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Guarantor"
             
          "400":
            description: Invalid input
      put:
        security:
          - bearerAuth: []
        tags:
          - Negotiation
        summary: Editar fiador
        description: "Editar fiador"
        parameters:
          - name: negotiationId
            in: path
            description: ID da negociação
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/Guarantor"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Guarantor"
             
          "400":
            description: Invalid input
      delete:
        security:
          - bearerAuth: []
        tags:
          - Negotiation
        summary: Remoção de fiador
        description: "Remoção de fiador"
        parameters:
          - name: negotiationId
            in: path
            description: ID da negociação
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  justification:
                    type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Guarantor"
             
          "400":
            description: Invalid input
    /v2/adm/calc-frete/{modelId}:
      post:
        security:
          - bearerAuth: []
        tags:
          - Adm
        summary: Calcular frete
        description: "Calcular frete"
        parameters:
          - name: modelId
            in: path
            description: ID do modelo
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/CalcFreteRB"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Frete"
             
          "400":
            description: Invalid input
    /v2/adm/segments:
      get:
        security:
          - bearerAuth: []
        tags:
          - Segments
        summary: listar segmentos
        description: "listar segmentos"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/Segment"
             
          "400":
            description: Invalid input
      post:
        security:
          - bearerAuth: []
        tags:
          - Segments
        summary: criar pergunta de checklist
        description: "criar pergunta de checklist"
        requestBody:
          $ref: "#/components/requestBodies/SegmentRB"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Segment"
          "400":
            description: Invalid input
    /V2/adm/segments/{segmentId}:
      put:
        security:
          - bearerAuth: []
        tags:
          - Segments
        summary: Editar segmento
        description: "Editar segmento"
        parameters:
          - name: segmentId
            in: path
            description: ID do segmento
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/SegmentRB"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Segment"
          "400":
            description: Invalid input
      delete:
        security:
          - bearerAuth: []
        tags:
          - Segments
        summary: deletar segmento
        description: "deletar segmento"
        parameters:
          - name: segmentId
            in: path
            description: ID do segmento
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Segment"
          "400":
            description: Invalid input
    /v2/negotiation/{negotationId}/contract-text:
      get:
        security:
          - bearerAuth: []
        tags:
          - Integration
        summary: Buscar texto de documento de assinatura de audio
        description: "Buscar texto de documento de assinatura de audio"
        parameters:
          - name: negotationId
            in: path
            description: ID do segmento
            required: true
            schema:
              type: string
        responses:
          "200":
            description: Uma string com o texto da assinatura por voz
          "400":
            description: Invalid input
    /v2/negotiation/compare-text-voice:
      post:
        security:
          - bearerAuth: []
        tags:
          - Integration
        summary: Comparar texto com voz
        description: "Comparar texto com voz"
        requestBody:
          $ref: "#/components/requestBodies/SpeechSignatureRB"
        responses:
          "200":
            description: Acurácia de audio
          "400":
            description: Invalid input
    /v2/assets/models:
      get:
        security:
          - bearerAuth: []
        tags:
          - Models
        summary: Listar modelos
        description: "Listar modelos"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Model"
          "400":
            description: Invalid input
      post:
        security:
          - bearerAuth: []
        tags:
          - Models
        summary: Criar novo modelo
        description: "Criar novo modelo"
        requestBody:
          $ref: "#/components/requestBodies/ModelRB"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Model"
          "400":
            description: Invalid input
    /v2/assets/models/{modelId}:
      get:
        security:
          - bearerAuth: []
        tags:
          - Models
        summary: Buscar modelo
        description: "Buscar modelo"
        parameters:
          - name: modelId
            in: path
            description: ID do modelo
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Model"
          "400":
            description: Invalid input
      put:
        security:
          - bearerAuth: []
        tags:
          - Models
        summary: Editar modelo
        description: "Editar modelo"
        parameters:
          - name: modelId
            in: path
            description: ID do modelo
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/ModelRB"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Model"
          "400":
            description: Invalid input
      delete:
        security:
          - bearerAuth: []
        tags:
          - Models
        summary: Desativar modelo
        description: "Desativar modelo"
        parameters:
          - name: modelId
            in: path
            description: ID do modelo
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Model"
          "400":
            description: Invalid input
    /v2/assets/models/resume/{orgId}:
      get:
        tags:
          - Models
        summary: Listagem pública de modelos
        description: "Listagem pública de modelos"
        parameters:
          - name: orgId
            in: path
            description: ID da organização
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/Model"
                    pagination:
                      type: object
                      properties:
                        current:
                          type: integer
                        maxPage:
                          type: integer
                        pageSize:
                          type: integer
                        total:
                          type: integer
          "400":
            description: Invalid input
    /v2/assets/models/{modelId}/business-rules:
      post:
        security:
          - bearerAuth: []
        tags:
          - Models
        summary: Criar regra de negócio
        description: "Criar regra de negócio"
        parameters:
          - name: modelId
            in: path
            description: ID do modelo
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/BusinessRuleRB"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Model"
          "400":
            description: Invalid input
    /v2/assets/models/{modelId}/business-rules/{businessRuleType}:
      patch:
        security:
          - bearerAuth: []
        tags:
          - Models
        summary: Editar regra de negócio
        description: "Editar regra de negócio"
        parameters:
          - name: modelId
            in: path
            description: ID do modelo
            required: true
            schema:
              type: string
          - name: businessRuleType
            in: path
            description: Tipo da regra de negócio
            required: true
            schema:
              type: string
              enum:
              - LOCACAO
              - VENDA
              - SHOWROOM
        requestBody:
          $ref: "#/components/requestBodies/BusinessRuleRB"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Model"
          "400":
            description: Invalid input
    /v2/assets/models/{modelId}/business-rules/{businessRuleType}/checklist/{checklistPhase}:
      put:
        security:
          - bearerAuth: []
        tags:
          - Models
        summary: Criar novo checklist
        description: "Criar novo checklist"
        parameters:
          - name: modelId
            in: path
            description: ID do modelo
            required: true
            schema:
              type: string
          - name: businessRuleType
            in: path
            description: Tipo da regra de negócio
            required: true
            schema:
              type: string
              enum:
              - LOCACAO
              - VENDA
              - SHOWROOM
          - name: checklistPhase
            in: path
            description: fase do checklist
            required: true
            schema:
              type: string
              enum:
              - LOCACAO
              - VISTORIA
              - INSTALACAO
              - INFO_COMERCIAIS
        requestBody:
          $ref: "#/components/requestBodies/ChecklistRB"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Model"
          "400":
            description: Invalid input
    /v2/assets/models/{modelId}/business-rules/{businessRuleType}/commercial-definitions:
      post:
        security:
          - bearerAuth: []
        tags:
          - Models
        summary: Criar condição comercial
        description: "Criar condição comercial"
        parameters:
          - name: modelId
            in: path
            description: ID do modelo
            required: true
            schema:
              type: string
          - name: businessRuleType
            in: path
            description: Tipo da regra de negócio
            required: true
            schema:
              type: string
              enum:
              - LOCACAO
              - VENDA
              - SHOWROOM
        requestBody:
          $ref: "#/components/requestBodies/CommercialDefinitionRB"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Model"
          "400":
            description: Invalid input
    /v2/assets/models/{modelId}/business-rules/{businessRuleType}/commercial-definitions/{commercialDefinitionId}/disable:
      patch:
        security:
          - bearerAuth: []
        tags:
          - Models
        summary: Desabilitar condição comercial
        description: "Desabilitar condição comercial"
        parameters:
          - name: modelId
            in: path
            description: ID do modelo
            required: true
            schema:
              type: string
          - name: businessRuleType
            in: path
            description: Tipo da regra de negócio
            required: true
            schema:
              type: string
              enum:
              - LOCACAO
              - VENDA
              - SHOWROOM
          - name: commercialDefinitionId
            in: path
            description: ID da condição comercial
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Segment"
             
          "400":
            description: Invalid input
    /v2/assets/models/{modelId}/business-rules/{businessRuleType}/commercial-definitions/{commercialDefinitionId}/enable:
      patch:
        security:
          - bearerAuth: []
        tags:
          - Models
        summary: Habilitar condição comercial
        description: "Habilitar condição comercial"
        parameters:
          - name: modelId
            in: path
            description: ID do modelo
            required: true
            schema:
              type: string
          - name: businessRuleType
            in: path
            description: Tipo da regra de negócio
            required: true
            schema:
              type: string
              enum:
              - LOCACAO
              - VENDA
              - SHOWROOM
          - name: commercialDefinitionId
            in: path
            description: ID da condição comercial
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Segment"
             
          "400":
            description: Invalid input
    /v2/assets/models/{modelId}/business-rules/{businessRuleType}/commercial-definitions/{commercialDefinitionId}:
      put:
        security:
          - bearerAuth: []
        tags:
          - Models
        summary: Editar condição comercial
        description: "Editar condição comercial"
        parameters:
          - name: modelId
            in: path
            description: ID do modelo
            required: true
            schema:
              type: string
          - name: businessRuleType
            in: path
            description: Tipo da regra de negócio
            required: true
            schema:
              type: string
              enum:
              - LOCACAO
              - VENDA
              - SHOWROOM
          - name: commercialDefinitionId
            in: path
            description: ID da condição comercial
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/CommercialDefinitionRB"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Model"
          "400":
            description: Invalid input
    /v2/negotiation/document-analysis/{analysisId}/async/ocr-analysis:
      get:
        security:
          - bearerAuth: []
        tags:
          - Integration
        summary: Solicitar analise de OCR
        description: "Solicitar analise de OCR"
        parameters:
          - name: analysisId
            in: path
            description: ID de análise
            required: true
            schema:
              type: string
        responses:
          "200":
            description: Solicitação de análise recebida.
          "400":
            description: erro em caso de falta de documentFront / documentBack
    /v2/negotiation/document-analysis/{analysisId}/async/facematch:
      get:
        security:
          - bearerAuth: []
        tags:
          - Integration
        summary: Solicitar analise de Facematch
        description: "Solicitar analise de Facematch"
        parameters:
          - name: analysisId
            in: path
            description: ID de análise
            required: true
            schema:
              type: string
        responses:
          "200":
            description: Solicitação de análise recebida.
          "400":
            description: erro em caso de falta de documentFront / documentBack / selfie
    /v2/negotiation/document-analysis/{analysisId}/async/resend:
      get:
        security:
          - bearerAuth: []
        tags:
          - Integration
        summary: Fazer reenvio de OCR / Facematch
        description: "Fazer reenvio de OCR / Facematch"
        parameters:
          - name: analysisId
            in: path
            description: ID de análise
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  documentFront: 
                    type: string
                  documentBack:
                    type: string
                  phaseName:
                    type: string
                    enum:
                      - OCR
                      - FACEMATCH
                    default: OCR
                  selfie:
                    type: string
                required:
                  - documentFront
                  - documentBack
                  - phaseName
        responses:
          "200":
            description: Solicitação de análise recebida.
          "400":
            description: erro em caso de falta de documentFront / documentBack / selfie
    /v2/technician?current=1&pageSize=10&sortBy=createdAt&sortDirection=DESC:
      get:
        security:
          - bearerAuth: []
        tags:
          - Technician
        summary: Lista de tecnicos da organização
        description: "Lista de tecnicos da organização"
        parameters:
          - name: current
            in: query
            description: página atual
            schema:
              type: integer
              default: 1
          - name: pageSize
            in: query
            description: tamanho da página
            schema:
              type: integer
              default: 10
          - name: sortBy
            in: query
            description: ordenar por
            schema:
              type: string
              default: createdAt
          - name: sortDirection
            in: query
            description: ordenação DESC / ASC
            schema:
              type: string
              default: DESC
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/Technician"
                    pagination:
                      type: object
                      properties:
                        current:
                          type: integer
                        maxPage:
                          type: integer
                        pageSize:
                          type: integer
                        total:
                          type: integer
          "400":
            description: Invalid input
    /v2/technician/{technicianId}:
      get:
        security:
          - bearerAuth: []
        tags:
          - Technician
        summary: Detalhamento de técnico da organização por id
        description: "Detalhamento de técnico da organização por id"
        parameters:
          - name: technicianId
            in: path
            description: ID do técnico
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Technician"
          "400":
            description: Invalid input
      patch:
        security:
          - bearerAuth: []
        tags:
          - Technician
        summary: Atualização de técnico da organização por id
        description: "Atualização de técnico da organização por id"
        parameters:
          - name: technicianId
            in: path
            description: ID do técnico
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/TechnicianRB"
        responses:
          "201":
            description: successful operation
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    description:
                      type: string
                      default: Usuario editado com sucesso
          "400":
            description: Invalid input
    /v2/technician:
      post:
        security:
          - bearerAuth: []
        tags:
          - Technician
        summary: Criar técnico
        description: "Criar técnico"
        requestBody:
          $ref: "#/components/requestBodies/TechnicianRB"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Technician"
          "400":
            description: Invalid input
    /v2/technician/{technicianId}/disable:
      patch:
        security:
          - bearerAuth: []
        tags:
          - Technician
        summary: desativação de técnico da organização por id
        description: "desativação de técnico da organização por id"
        parameters:
          - name: technicianId
            in: path
            description: ID do técnico
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Technician"
          "400":
            description: Invalid input
    /v2/technician/{technicianId}/enable:
      patch:
        security:
          - bearerAuth: []
        tags:
          - Technician
        summary: ativação de técnico da organização por id
        description: "ativação de técnico da organização por id"
        parameters:
          - name: technicianId
            in: path
            description: ID do técnico
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Technician"
          "400":
            description: Invalid input
    /v2/tickets:
      post:
        security:
          - bearerAuth: []
        tags:
          - Ticket
        summary: Criar chamado
        description: "Criar chamado"
        requestBody:
          $ref: "#/components/requestBodies/TicketRB"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Ticket"
          "400":
            description: Invalid input
    /v2/tickets?current=1&pageSize=10&sortBy=createdAt&sortDirection=DESC:
      get:
        security:
          - bearerAuth: []
        tags:
          - Ticket
        summary: Lista de chamados da organização
        description: "Lista de chamados da organização"
        parameters:
          - name: current
            in: query
            description: página atual
            schema:
              type: integer
              default: 1
          - name: pageSize
            in: query
            description: tamanho da página
            schema:
              type: integer
              default: 10
          - name: sortBy
            in: query
            description: ordenar por
            schema:
              type: string
              default: createdAt
          - name: sortDirection
            in: query
            description: ordenação DESC / ASC
            schema:
              type: string
              default: DESC
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/Ticket"
                    pagination:
                      type: object
                      properties:
                        current:
                          type: integer
                        maxPage:
                          type: integer
                        pageSize:
                          type: integer
                        total:
                          type: integer
          "400":
            description: Invalid input
    /v2/tickets/{ticketId}:
      get:
        security:
          - bearerAuth: []
        tags:
          - Ticket
        summary: Detalhar chamado
        description: "Detalhar chamado"
        parameters:
          - name: ticketId
            in: path
            description: ID do chamado
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Ticket"
          "400":
            description: Invalid input
      patch:
        security:
          - bearerAuth: []
        tags:
          - Ticket
        summary: Editar chamado
        description: "Editar chamado"
        parameters:
          - name: ticketId
            in: path
            description: ID do chamado
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/TicketRB"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Ticket"
          "400":
            description: Invalid input
    /v2/tickets/{ticketId}/disable:
      patch:
        security:
          - bearerAuth: []
        tags:
          - Ticket
        summary: desativação de chamado da organização por id
        description: "desativação de chamado da organização por id"
        parameters:
          - name: ticketId
            in: path
            description: ID do chamado
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Ticket"
          "400":
            description: Invalid input
    /v2/tickets/{ticketId}/enable:
      patch:
        security:
          - bearerAuth: []
        tags:
          - Ticket
        summary: ativação de chamado da organização por id
        description: "ativação de chamado da organização por id"
        parameters:
          - name: ticketId
            in: path
            description: ID do chamado
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Ticket"
          "400":
            description: Invalid input
    /v2/assets?current=1&pageSize=10&sortBy=createdAt&sortDirection=DESC:
      get: 
        security:
          - bearerAuth: []
        tags:
          - Assets
        summary: Lista de ativos da organização
        description: "Lista de ativos da organização"
        parameters:
          - name: current
            in: query
            description: página atual
            schema:
              type: integer
              default: 1
          - name: pageSize
            in: query
            description: tamanho da página
            schema:
              type: integer
              default: 10
          - name: sortBy
            in: query
            description: ordenar por
            schema:
              type: string
              default: createdAt
          - name: sortDirection
            in: query
            description: ordenação DESC / ASC
            schema:
              type: string
              default: DESC
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/Asset"
                    pagination:
                      type: object
                      properties:
                        current:
                          type: integer
                        maxPage:
                          type: integer
                        pageSize:
                          type: integer
                        total:
                          type: integer
          "400":
            description: Invalid input
    /v2/assets:
      post:
        security:
          - bearerAuth: []
        tags:
          - Assets
        summary: Criar ativo
        description: "Criar ativo"
        requestBody:
          $ref: "#/components/requestBodies/AssetRB"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Asset"
          "400":
            description: Invalid input
    /v2/assets/{assetId}:
      get:
        security:
          - bearerAuth: []
        tags:
          - Assets
        summary: Detalhar ativo
        description: "Detalhar ativo"
        parameters:
          - name: assetId
            in: path
            description: ID do ativo
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Asset"
          "400":
            description: Invalid input
      put:
        security:
          - bearerAuth: []
        tags:
          - Assets
        summary: Editar ativo
        description: "Editar ativo"
        parameters:
          - name: assetId
            in: path
            description: ID do ativo
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/AssetRB"
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Asset"
          "400":
            description: Invalid input
      delete:
        security:
          - bearerAuth: []
        tags:
          - Assets
        summary: Desativar ativo
        description: "Desativar ativo"
        parameters:
          - name: assetId
            in: path
            description: ID do ativo
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Asset"
          "400":
            description: Invalid input
    /v2/negotiation/{negotiationOrClientId}/questions/{questionId}/approve:
      post:
        security:
          - bearerAuth: []
        tags:
          - Negotiation
        summary: Aprovar pergunta
        description: "Aprovar pergunta"
        parameters:
          - name: negotiationOrClientId
            in: path
            description: ID da negociação
            required: true
            schema:
              type: string
          - name: questionId
            in: path
            description: ID da pergunta
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Negotiation"
          "400":
            description: Invalid input
    /v2/negotiation/{negotiationOrClientId}/questions/{questionId}/reprove:
      post:
        security:
          - bearerAuth: []
        tags:
          - Negotiation
        summary: Reprovar pergunta
        description: "Reprovar pergunta"
        parameters:
          - name: negotiationOrClientId
            in: path
            description: ID da negociação
            required: true
            schema:
              type: string
          - name: questionId
            in: path
            description: ID da pergunta
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Negotiation"
          "400":
            description: Invalid input
  externalDocs:
    description: Find out more about Swagger
    url: http://swagger.io
  servers:
    - url: http://localhost:8080
  components:
    securitySchemes:
      bearerAuth:            # arbitrary name for the security scheme
        type: http
        scheme: bearer
        bearerFormat: JWT
    requestBodies:
      AssetRB:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssetRB"
      TicketRB:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TicketRB"
      TechnicianRB:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TechnicianRB"
      BusinessRuleRB:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessRuleRB"
      CommercialDefinitionRB:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommercialDefinitionRB"
      ChecklistRB:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChecklistRB"
      ModelRB:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelRB"
      SpeechSignatureRB:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpeechSignatureRB"
      Guarantor:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Guarantor"
      HistoricalItemSlim:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HistoricalItemSlim"
      Login:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      Register:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Register"
      RefreshToken:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshToken"
      Question:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Question"
      AproveReproveAnalysis:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AproveReproveAnalysis"
      NegotiationRB:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NegotiationRB"
      NegotiationUpdateRB:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NegotiationUpdateRB"
      CalcFreteRB:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CalcFreteRB"
      SegmentRB:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SegmentRB"
    schemas:
      AssetRB:
        type: object
        properties:
          name:
            type: string
          model:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              segment:
                type: string
          serie_number:
            type: string
          blocked_id:
            type: string
          connetected_id:
            type: string
          last_connection_date:
            type: string
          current_contract:
            type: object
          value:
            type: number
          images:
            type: array
            items:
              type: string
      Asset:
        type: object
        properties:
          id: 
            type: string
          organization_ref:
            type: string
          name:
            type: string
          model:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              segment:
                type: string
          serie_number:
            type: string
          blocked_id:
            type: string
          connetected_id:
            type: string
          last_connection_date:
            type: string
          historical_status:
            type: array
            items:
              $ref: "#/components/schemas/HistoricalItem"
          current_contract:
            type: object
          disabled:
            type: boolean
            default: false
          value:
            type: number
          images:
            type: array
            items:
              type: string
          created_at:
            type: string
          updated_at:
            type: string
      TicketRB:
        type: object
        properties:
          category:
            type: string
          title:
            type: string
          executor:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
          asset:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
          contract_id:
            type: string
          description:
            type: string
          priority:
            type: string
          status:
            type: string
          images:
            type: array
            items:
              type: string
          concluded_date:
            type: string
          finish_date:
            type: string
          start_date:
            type: string
          scheduling_date:
            type: string
          rating:
            type: integer
          rating_comment:
            type: string
          justification:
            type: string
          technician_code:
            type: string
      Ticket:
        type: object
        properties:
          code:
            type: string
          organization_ref:
            type: string
          requested_by:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              cellphone:
                type: string
              identifier_code:
                type: string
          category:
            type: string
          title:
            type: string
          executor:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
          asset:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
          contract_id:
            type: string
          description:
            type: string
          priority:
            type: string
          status:
            type: string
          historical:
            type: array
            items:
              $ref: "#/components/schemas/HistoricalItem"
          images:
            type: array
            items:
              type: string
          concluded_date:
            type: string
          finish_date:
            type: string
          start_date:
            type: string
          scheduling_date:
            type: string
          rating:
            type: integer
          rating_comment:
            type: string
          justification:
            type: string
          technician_code:
            type: string
          disabled:
            type: boolean
            default: false
          created_at:
            type: string
          updated_at:
            type: string
      UserRefs:
        type: object
        properties:
          ref:
            type: string
          name:
            type: string
          email:
            type: string
          status:
            type: string
            enum:
              - INATIVO
              - ATIVO
              - EM_ANALISE
          cellphone: 
            type: string
      BankData:
        type: object
        properties:
          bankAgency:
            type: string
          bankCode:
            type: string
          bankName:
            type: string
          bankAccount:
            type: string
      TechnicianRB:
        type: object
        properties:
          name:
            type: string
          email:
            type: string
          cellphone:
            type: string
          origin:
            type: string
          address:
            $ref: "#/components/schemas/Address"
          technician_type:
            type: string
          identifier_code:
            type: string
          bank_data:
            $ref: "#/components/schemas/BankData"
          distance_range:
            type: integer
            default: 150
          phase:
            type: object
            properties:
              name:
                type: string
              is_reproved:
                type: boolean
      Technician:
        type: object
        properties:
          id:
            type: string
          technician_type:
            type: string
          identifier_code:
            type: string
          bank_data:
            $ref: "#/components/schemas/BankData"
          distance_range:
            type: integer
          address:
            $ref: "#/components/schemas/Address"
          user_refs:
            $ref: "#/components/schemas/UserRefs"
          disable:
            type: boolean
            default: false
          phase:
            type: object
            properties:
              name:
                type: string
              is_reproved:
                type: boolean
          typeof:
            type: string
            default: TECNICO
          profiles:
            type: array
            items:
              type: string
          historical:
            type: array
            items:
              $ref: "#/components/schemas/HistoricalItem"
          created_at:
            type: string
          updated_at:
            type: string
      BusinessRuleRB:
        type: object
        properties:
          description:
            type: string
          type:
            type: string
            enum:
              - LOCACAO
              - VENDA
              - SHOWROOM
          analysis_queue:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                label:
                  type: string
                integration:
                  type: string
          checklist_phases:
            type: array
            items:
              type: string
              enum:
                - LOCACAO
                - VISTORIA
                - INSTALACAO
                - INFO_COMERCIAIS
      CommercialDefinitionRB:
        type: object
        properties:
          description:
            type: string
          signal_value:
            type: number
          installation_value:
            type: number
          number_of_installments:
            type: integer
          installment_value:
            type: number
          jira_code:
            type: string
      ChecklistRB:
        type: object
        properties:
          name:
            type: string
          phase:
            type: string
          status:
            type: string
          questions:
            type: array
            items:
              type: string
      ModelRB:
        type: object
        properties:
          segment:
            type: string
          description:
            type: string
          name:
            type: string
          image:
            type: string
          manufacturer:
            type: string
          text_audio_contract:
            type: string
          terms:
            type: string
          specifications:
            type: object
            properties:
              height:
                type: integer
              length:
                type: integer
              weight:
                type: integer
              width:
                type: integer
              shipment_invoice_value:
                type: number
      Model:
        type: object
        properties:
          id:
            type: string
          segment:
            type: string
          description:
            type: string
          name:
            type: string
          image:
            type: string
          manufacturer:
            type: string
          text_audio_contract:
            type: string
          terms:
            type: string
          specifications:
            type: object
            properties:
              height:
                type: integer
              length:
                type: integer
              weight:
                type: integer
              width:
                type: integer
              shipment_invoice_value:
                type: number
          historical:
            type: array
            items:
              $ref: "#/components/schemas/HistoricalItem"
      SpeechSignatureRB:
        type: object
        properties:
          gcs_uri:
            type: string
          text:
            type: string
      SegmentRB:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
      Segment:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          disabled:
            type: boolean
          historical:
            type: array
            items:
              $ref: "#/components/schemas/HistoricalItem"
          createdAt:
            type: string
          updatedAt:
            type: string
          createUser:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
      CalcFreteRB:
        type: object
        properties:
          recipientCep:
            type: string
      Frete:
        type: object
        properties:
          shippingSevicesArray:
            type: array
            items:
              type: object
              properties:
                allowBuyLabel:
                  type: boolean
                carrier:
                  type: string
                carrierCode:
                  type: string
                deliveryTime:
                  type: string
                error:
                  type: boolean
                originalDeliveryTime:
                  type: string
                originalShippingPrice:
                  type: string
                responseTime:
                  type: string
                serviceCode:
                  type: string
                serviceDescription:
                  type: string
                shippingPrice:
                  type: string
          timeout:
            type: integer 
      Guarantor:
        type: object
        required:
          - type
          - cpf
          - email
          - cellphone
          - motherName
          - rg
          - rgEmmitDate
          - rgEmmitOrg
        properties:
          fullName:
            type: string
          cpf:
            type: string
          email:
            type: string
          birthDate:
            type: string
          address:
            $ref: "#/components/schemas/Address"
          cellphone:
            type: string
          motherName:
            type: string
          rg:
            type: string
          rgEmmitDate:
            type: string
          rgEmmitOrg:
            type: string
          copyOfDocumentFront:
            type: string
          copyOfDocumentBack:
            type: string
          selfieWithDocument:
            type: string
          income:
            type: number
          proofOfIncome:
            type: string
          aproved:
            type: string
          userAproved:
            type: string
      HistoricalItemSlim:
        type: object
        properties:
          type: 
            type: string
            enum:
              - EDIT_BASIC_INFO
              - EDIT_BANK_DETAILS
              - NOTE
              - SYSTEM
              - CHATBOT
              - CREATE_CONTRATC_TECHNICIAN
              - TECHNICIAN_CHANGE
              - CHANGE_INSTALLATION_DATE
              - ACTIVE_TECHNICIAN
              - INACTIVE_TECHNICIAN
              - SETTINGS
              - ACTIVE_CANCELLED_ENTREPRENEUR
              - TRUST_UNLOCK
              - EDIT_PERSONAL_DATA
              - EDIT_BUSINESS_DATA
              - CUSTOMER_SERVICE
              - ANALYSIS_APROVED
              - ANALYSIS_REPROVED
              - SHIPPING
          description: 
            type: string
          justification: 
            type: string
      HistoricalItem:
        type: object
        properties:
          id: 
            type: string
          date:
            type: string
          type: 
            type: string
            enum:
              - EDIT_BASIC_INFO
              - EDIT_BANK_DETAILS
              - NOTE
              - SYSTEM
              - CHATBOT
              - CREATE_CONTRATC_TECHNICIAN
              - TECHNICIAN_CHANGE
              - CHANGE_INSTALLATION_DATE
              - ACTIVE_TECHNICIAN
              - INACTIVE_TECHNICIAN
              - SETTINGS
              - ACTIVE_CANCELLED_ENTREPRENEUR
              - TRUST_UNLOCK
              - EDIT_PERSONAL_DATA
              - EDIT_BUSINESS_DATA
              - CUSTOMER_SERVICE
              - ANALYSIS_APROVED
              - ANALYSIS_REPROVED
              - SHIPPING
          description: 
            type: string
          justification: 
            type: string
          backoffice_user:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
      Address:
        type: object
        required:
          - state
          - city
          - zipCode
          - stAve
          - neighborhood
        properties:
          state:
            type: string
            minLength: 2
            maxLength: 4
          city:
            type: string
          number:
            type: string
          zipCode:
            type: string
          stAve:
            type: string
          neighborhood:
            type: string
          complement:
            type: string
          proofOfResidence:
            type: string     
      ShowSubquestionCondition:
        type: object
        properties:
          value:
            type: string
          label:
            type: string
          description:
            type: string
      Login:
        type: object
        properties:
          email:
            type: string
          password:
            type: string
      Register:
        type: object
        properties:
          name:
            type: string
          email:
            type: string
          password:
            type: string
          profiles:
            type: array
            items: 
              type: string
          status:
            type: string
            enum:
              - INATIVO
              - ATIVO
              - EM_ANALISE
          typeof:
            type: string
            enum:
              - GESTOR
              - EMPREENDEDOR
              - TECNICO
              - USUARIO_EMPRESA
          cellphone:
            type: string
          origin:
            type: string
      RefreshToken:
        type: object
        properties:
          refreshToken:
            type: string
      Question:
        type: object
        properties:
          label:
            type: string
          typeof:
            type: string
            enum: 
              - OPTION
              - UPLOAD
              - AGREEMENT
              - TEXT
          options:
            $ref: "#/components/schemas/ShowSubquestionCondition"
          required:
            type: boolean
          mask:
            type: string
          requirements:
            type: array
            items:
              type: string
          showSubquestionCondition:
            $ref: "#/components/schemas/ShowSubquestionCondition"
          terms:
             type: array
             items:
               type: string
          subQuestions:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                label:
                  type: string
                typeof:
                  type: string
                  default: TEXT
                  enum:
                    - OPTION
                    - UPLOAD
                    - AGREEMENT
                    - TEXT
                uploadOrigin:
                  type: array
                  items:
                    type: string
                    enum:
                      - CAMERA
                      - GALLERY
                options:
                  type: object
                  properties:
                    value: 
                      type: string
                    label:
                      type: string
                    description:
                      type: string
                required: 
                  type: boolean
                  default: false
                mask:
                  type: string
                requirements:
                  type: array
                  items:
                    type: string
                showSubquestionCondition:
                  $ref: "#/components/schemas/ShowSubquestionCondition"
                terms:
                  type: array
                  items:
                    type: string
                subQuestions:
                  type: object
          observation: 
            type: string
      AproveReproveAnalysis:
        type: object
        properties:
          status:
            type: string
            enum:
              - COMPLETE
              - REPROVED
          historicalItem:
            type: object
            properties:
              description:
                type: string
              justification:
                type: string
      PersonalData:
        type: object
        required:
          - name
          - address
          - cellphone
          - document
        properties:
          name: 
            type: string
          birthDate:
            type: string
          address:
            $ref: "#/components/schemas/Address"
          cellphone:
            type: string
          motherName:
            type: string
          document:
            type: string
          documentIssuanceDate:
            type: string
          responsibleIssuingDocument:
            type: string
          documentType:
            type: string
            enum:
              - CPF
              - RG
              - HABILITACAO
          documentProof:
            type: string
      BusinessData:
        type: object
        required:
          - name
          - address
          - cellphone
          - document
        properties:
          name: 
            type: string
          companyName:
            type: string
          typeof:
            type: string
            enum:
              - MEI
              - ME
            default: ME
          address:
            $ref: "#/components/schemas/Address"
          cellphone:
            type: string
          openingDate:
            type: string
      Negotiation:
        type: object
        properties:
          id:
            type: string
          contract_number:
            type: string
          model_selected: 
            type: array
          contractor:
            type: object
          business_rule:
            type: object
          technicians:
            type: array
          assets: 
            type: array
          financial:
            type: object
          phase:
            type: object
          value:
            type: integer
          historical_status: 
            type: array
          company_users: 
            type: array
          shipping:
            type: object
          shipping_value:
            type: integer
          signal:
            type: object
          document_analysis: 
            type: array
          installation:
            type: object
          guarantor:
            type: object
          contacts_verification:
            type: object
          organization_ref:
            type: string
          agreed_terms:
            type: boolean
          audio_signature_acurracy:
            type: integer
          audio_signature:
            type: string
          created_at:
            type: string
          updated_at:
            type: string
      NegotiationRB:
        type: object
        properties:
          contract_number:
            type: string
          model_selected: 
            type: array
          contractor:
            type: object
          business_rule:
            type: object
          technicians:
            type: array
          assets: 
            type: array
          financial:
            type: object
          phase:
            type: object
          value:
            type: integer
          historical_status: 
            type: array
          company_users: 
            type: array
          shipping:
            type: object
          shipping_value:
            type: integer
          signal:
            type: object
          document_analysis: 
            type: array
          installation:
            type: object
          guarantor:
            type: object
          contacts_verification:
            type: object
          organization_ref:
            type: string
          agreed_terms:
            type: boolean
          audio_signature_acurracy:
            type: integer
          audio_signature:
            type: string
          created_at:
            type: string
          updated_at:
            type: string
      NegotiationUpdateRB:
        type: object
        properties:
          contract_number:
            type: string
          model_selected: 
            type: array
          address:
            $ref: "#/components/schemas/Address"
          checklists:
            type: array
            items:
              type: object
          technicians:
            type: array
          assets: 
            type: array
          financial:
            type: object
          phase:
            type: object
          value:
            type: integer
          historical_status: 
            type: array
          company_users: 
            type: array
          shipping:
            type: object
          shipping_value:
            type: integer
          signal:
            type: object
          document_analysis: 
            type: array
          installation:
            type: object
          guarantor:
            type: object
          contacts_verification:
            type: object
          organization_ref:
            type: string
          agreed_terms:
            type: boolean
          audio_signature_acurracy:
            type: integer
          audio_signature:
            type: string
          historical_item:
            $ref: "#/components/schemas/HistoricalItemSlim"
          created_at:
            type: string
          updated_at:
            type: string
contentType: yaml
